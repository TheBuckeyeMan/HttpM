name: Library CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  # Job 1: Extract Version and Test the Library
  Test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Extract Version from pom.xml
        id: get_version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"

      - name: Run Tests
        run: mvn test
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports/

  # Job 2: Static Analysis and Scanning
  Scan:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Run Checkstyle Analysis
        run: mvn checkstyle:check
        
      - name: List Files in Host Repo
        run: ls -la $GITHUB_WORKSPACE

      - name: Verify JAVA_HOME
        run: echo "JAVA_HOME is set to $JAVA_HOME"

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: HttpM
          format: 'ALL'
          path: './'
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

  # Job 3: Build the Library
  Build:
    runs-on: ubuntu-latest
    needs: [Test, Scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build Library
        run: mvn clean package

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/*.jar

  # Job 4: Deploy to GitHub Packages
  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: jar-file

      - name: Deploy Library to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_GH_TOKEN }}
          LIBRARY_VERSION: ${{ needs.Test.outputs.version }}
        run: mvn deploy -DskipTests -Dproject.version=${{ env.LIBRARY_VERSION }}
