name: Library CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  LIBRARY_NAME: "HttpM"
  LIBRARY_VERSION: "0.0.1-SNAPSHOT"

jobs:
  # Job 1: Test the Library
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Run Tests
        run: mvn test
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports/  # Adjust to the directory where your test results are stored

  # Job 2: Static Analysis and Scanning
  Scan:
    runs-on: ubuntu-latest
    needs: Test  # Run only if Maven_Test succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Run Checkstyle Analysis
        run: mvn checkstyle:check

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: HttpM
          format: 'ALL'
          path: './'

  # Job 3: Build the Library
  Build:
    runs-on: ubuntu-latest
    needs: [Test, Scan]  # Run only if both tests and scans succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build Library
        run: mvn clean package

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/*.jar  # Adjust to the path of your built .jar file

  # Job 4: Deploy to GitHub Packages
  Deploy:
    runs-on: ubuntu-latest
    needs: Build  # Run only if Maven_Build succeeds
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: jar-file

      - name: Deploy Library to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_GH_TOKEN }}
        run: mvn deploy -DskipTests
